/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'kauedb' at '9/7/14 12:25 PM' with Gradle 2.0
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.0/userguide/tutorial_java_projects.html
 */

/*
// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'maven central' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.5'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile "junit:junit:4.11"
}
*/

wrapper {
    version = 2.1
}

ext {

    // scala dependencies
    scala = [version: '2.11']

    // infrastructure dependencies
    sl4j = [version: '1.7.7']
    logback = [version: '1.1.2']

    log = [
            "org.slf4j:slf4j-api:$sl4j.version",
            "org.slf4j:jcl-over-slf4j:$sl4j.version",
            "ch.qos.logback:logback-classic:$logback.version",
            "ch.qos.logback:logback-core:$logback.version",
    ]

    junit = [version: '4.11']
}


buildscript {

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.github.maiflai:gradle-scalatest:0.4'
    }
}

subprojects {
    group = 'br.com.kauedb.register'
    version = '1.0'

    apply plugin: 'scala'

    repositories {
        mavenCentral()
    }

    dependencies {

        compile "org.scala-lang:scala-compiler:$scala.version.1"
        compile "org.scala-lang:scala-library:$scala.version.1"
        testCompile "org.scalatest:scalatest_$scala.version:2.2.0"
        testCompile "org.scala-lang:scala-actors:$scala.version.2"

        testCompile "junit:junit:$junit.version"
    }

    test {
        testLogging {
            // set options for log level LIFECYCLE
            events "failed", "passed", "skipped", "started"
            exceptionFormat "short"
        }
    }
}